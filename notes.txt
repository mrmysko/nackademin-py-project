# ThreadPool
# https://www.zenrows.com/blog/python-parallel-requests#what-are-parallel-requests-in-python
# https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.ThreadPoolExecutor

# bs4
# https://www.crummy.com/software/BeautifulSoup/bs4/doc/

# sqlite3
# https://docs.python.org/3/library/sqlite3.html

# Ide - Om jag associerar id med en produkt, så kan jag implementera en __next__ och iterera över objekten? Så varje call till next hämtar nästa produkt från databasen?
# Use with statements to close db-connection and cursor when done.

# Logga update_all output till konsolen och en fil? https://betterstack.com/community/questions/how-to-log-to-file-and-console-in-python/
# SIGTERM - https://stackoverflow.com/questions/18499497/how-to-process-sigterm-signal-gracefully
# https://www.geeksforgeeks.org/python-os-kill-method/


# Error-handling:

Fel länk. - soup returnerar ett AttributeError för att den inte hittar diven som den letar efter. Hur ska det hanteras? Ge användaren en konsoloutput "Bad link.", men hur? 
# Känns inte riktigt kosher, det är 2 try i olika filer som fångar olika errors och en if som kollar om en self.corrupt flagga är satt för att kunna discarda ett object som en "bad link"? Inget mer specifikt, vad är det som är fel?

Webbserver unreachable - Om requests.get inte kan komma åt servern.
# Samma här, båda hanteras i ExtractData som returnerar False, det blir ett TypeError i Product-klassen som leder till en "Bad link" i add_menu().

Databasen unreachable - Om databasen är locked eller rättighetsproblem som inte kan skapa en ny db när programmet körs.
# 

Indexerings-fel - Användaren skriver in ett index som inte finns i databasen.
#