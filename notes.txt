# ThreadPool
# https://www.zenrows.com/blog/python-parallel-requests#what-are-parallel-requests-in-python
# https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.ThreadPoolExecutor

# bs4
# https://www.crummy.com/software/BeautifulSoup/bs4/doc/

# sqlite3
# https://docs.python.org/3/library/sqlite3.html

# Ide - Om jag associerar id med en produkt, så kan jag implementera en __next__ och iterera över objekten? Så varje call till next hämtar nästa produkt från databasen?
# Use with statements to close db-connection and cursor when done.

# Todo - Få ut mer data/kategorier från items? https://www.netonnet.se/art/dator-surfplatta/laptop/laptop-14-16-tum/angstrom-angstrom-m1home/1028915.8908/ t.ex. Kommer ut som "Ångström  (M1HOME)", vilket inte säger någonting. (Det är en laptop btw.)
# Todo - Options (verbose?) och mer output när saker händer till konsolen.
# Todo - Felhantering: Fel länk, hittar inte element, databasen går inte att öppna, hittar inte någor i databasen, om användaren skriver in fel.
# Todo - Regex clean url, also move it to class method.
# Todo - Update progressbar
# Todo - Print sorting options
¤ Todo - Som less/more att den printar 10 rader i taget.
# Todo - Merge update och insert data.
        - update tar ett id -> hämtar product_data -> kör dens update() -> Kollar om datan är uppdaterad 
                                                                            -> om inte, break -> annars skicka till insert som uppdaterar i db.

# Todo - Uppdatera bara databasen när product.update() får ny data.
# Todo - I update_all, räkna hur många produkter som faktiskt blev uppdaterade.
# Todo - Det är något wonky med price och lowest_price, den ena har ett komma som tusendelare. (gör ingen skillnad för comparison, men ändå.)
# Todo - Hämta db från foldern main ligger i, inte därifrån användaren är.
# Todo - Flera program på samma databas, stäng connection när den inte används annars blir databasen locked?